# This script is used to compare the database deployment script with default one to make sure that releases with actual change will require manual intervention
# This script is based https://confluence.teamabc.com/display/PRAC/How+To%3A+Setup+an+Octopus+project+to+automate+SQL+Deployment+Approval+Step manual

$NoChangesReport = '<?xml version="1.0" encoding="utf-8"?><DeploymentReport xmlns="http://schemas.microsoft.com/sqlserver/dac/DeployReport/2012/02"><Alerts /></DeploymentReport>'

TRY
{
    # (re)setting  the ApprovalRequired variable to null as Octopus stores and reuse the value during redeployment.
    Set-OctopusVariable -name "ApprovalRequired" -value $null

	$ArtifactDownloadFilePath = $OctopusParameters["ArtifactDownloadFilePath"]
	$OctopusEnvironmentName = $OctopusParameters["Octopus.Environment.Name"]
	$DatabaseName = $OctopusParameters["DatabaseName"]
	$OctopusReleaseNumber = $OctopusParameters["Octopus.Release.Number"]
    $TargetServers = $OctopusParameters["TargetServers"]
    
    $deployReportContent = Get-Content "$ArtifactDownloadFilePath\deployreports\$TargetServers.$OctopusEnvironmentName.$DatabaseName.$OctopusReleaseNumber.deployreport.xml"

    IF ( $NoChangesReport -eq $deployReportContent) {
        write-output "Deploy report matches at least one of the auto approved XMLs. DB deploy approval step can be skipped."
        Set-OctopusVariable -name "ApprovalRequired" -value "False"
    } else {
        write-output "Deploy Report does not match any of the auto approved XMLs. DB deploy approval required."
        Set-OctopusVariable -name "ApprovalRequired" -value "True"
    }
}
CATCH
{
    $ErrorMessage = $_.Exception.Message
    WRITE-WARNING "ERROR in processing the artifact(s) : $ErrorMessage "
    Set-OctopusVariable -name "ApprovalRequired" -value "True"
}
